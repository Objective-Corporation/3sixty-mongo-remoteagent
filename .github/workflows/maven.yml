name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
    tags:
        - '*'
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    
    # checkout code
    - uses: actions/checkout@v4
    
    # setup JDK
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    # Maven build
    - name: Build with Maven
      run: mvn clean -B package --file pom.xml
        
     # Find the JAR file in the target directory and set as an environment variable
    - name: Find JAR File Name
      id: find_jar
      shell: bash
      run: |
        JAR_FILE=$(basename "$(ls target/*exec.jar | head -n 1)")
        echo "JAR_FILE_NAME=$JAR_FILE" >> $GITHUB_ENV
      
    # Upload jars
    - name: Upload Jar
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.JAR_FILE_NAME }}
        path: target/*exec.jar

    # Create a GitHub release when a tag is pushed
    - name: Create Release
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${GITHUB_REF_NAME}
        body: Automatically created release from GitHub Actions workflow.
        draft: false
        prerelease: false

    # Upload the JAR file to the newly created release as an asset
    - name: Upload JAR to Release
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: target/${{ env.JAR_FILE_NAME }}
        asset_name: ${{ env.JAR_FILE_NAME }}
        asset_content_type: application/java-archive