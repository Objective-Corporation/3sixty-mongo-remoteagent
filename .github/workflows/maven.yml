# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    
    # checkout code
    - uses: actions/checkout@v4
    
    # setup JDK
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Extract Project Information
      id: extract_project_information
      shell: bash
      run: |      
        ARTIFACT_ID=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)
        echo "ARTIFACT_ID=$ARTIFACT_ID" >> $GITHUB_ENV   
        REVISION=$(mvn help:evaluate -Dexpression=revision -q -DforceStdout)
        echo "REVISION=$REVISION" >> $GITHUB_ENV        
        CHANGE_LIST=$(mvn help:evaluate -Dexpression=changelist -q -DforceStdout)
        echo "CHANGE_LIST=$CHANGE_LIST" >> $GITHUB_ENV
        
     # Find the JAR file in the target directory and set as an environment variable
    - name: Find JAR File Name
      id: find_jar
      shell: bash
      run: |
        JAR_FILE=$(basename "$(ls target/*exec.jar | head -n 1)")
        echo "JAR_FILE_NAME=$JAR_FILE" >> $GITHUB_ENV
        
    # Maven build
    - name: Build with Maven
      run: mvn clean -B package --file pom.xml
      
    # Upload jars
    - name: Upload Jar
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.JAR_FILE }}
        path: target/${{ env.JAR_FILE }}
